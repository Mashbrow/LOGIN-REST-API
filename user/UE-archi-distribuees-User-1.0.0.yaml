---
openapi: 3.0.0
info:
  title: User API
  description: This is the API of the User service
  contact:
    email: helene.coullon@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/UE-archi-distribuees/User/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/UE-archi-distribuees/Movie/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Test</h1>
  /user:
    get:
      tags:
      - developers
      summary: get the full JSON database
      description: |
        Nothing to do
      operationId: get_json
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUser'
  /user/{userid}:
    get:
      tags:
      - developers
      summary: get the average rating of the films booked by a user
      description: |
        By passing in the appropriate options, you can get the average rating of the films booked by a user
      operationId: get_average_user_rating
      parameters:
      - name: userid
        in: path
        description: User ID.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1
          minimum: 1
          type: string
      responses:
        "200":
          description: the average rating of the films booked by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AverageRating'
        "400":
          description: no user existing
        "409":
          description: no movies booked for that user
        
components:
  schemas:
    AllUser:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      required:
      - id
      - name
      - lastactive
      type: object
      properties:
        id:
          type: string
          example: chris_rivers
        name:
          type: string
          example: Chris Rivers
        lastactive:
          type: int
          example: 1360031010
    AverageRating:
      required:
      - rating
      type: object
      properties:
        rating:
          type: float
          example: 8.5